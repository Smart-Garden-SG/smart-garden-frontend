name: React CI

on:
  push:
    branches: [ "main" ]
    tags:
      - '**'  # Captura qualquer tag
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Instalar dependências
        run: npm install

      - name: Fazer build do projeto
        run: npm run build

      - name: Listar arquivos após o build
        run: ls -la

      - name: Listar conteúdo da pasta build
        run: ls -la build/

      - name: Verificar diretório atual
        run: pwd

      - name: Compactar o build
        run: zip -r build.zip build/

      - name: Listar arquivos após compactar o build
        run: ls -la

      - name: Debug github.ref
        run: echo "github.ref = ${{ github.ref }}"

      - name: Criar Release no GitHub
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Enviar o build para a Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build.zip
          asset_name: react-app-build.zip
          asset_content_type: application/zip
